package buddy.dto;

import java.util.ArrayList;
import java.util.List;

/**
 * BUDDY 모델 클래스.
 * 
 * @author generated by ERMaster
 * @version $Id$
 */
public class Buddy {

	/** BUDDY_ID. */
	private String buddyId;

	/** BUDDY_NAME. */
	private String buddyName;

	/** PASSWORD. */
	private String password;

	/** BOARD 목록. */
	private List<Board> boardList;

	/** REPLY 목록. */
	private List<Reply> replyList;

	/**
	 * 생성자.
	 */
	public Buddy() {
		this.boardList = new ArrayList<Board>();
		this.replyList = new ArrayList<Reply>();
	}

	public Buddy(String buddyId, String buddyName, String password) {
		this();
		this.buddyId = buddyId;
		this.buddyName = buddyName;
		this.password = password;
	}

	public Buddy(String buddyId) {
		this(buddyId, null, null);
	}

	/**
	 * BUDDY_ID을 설정합니다..
	 * 
	 * @param buddyId
	 *            BUDDY_ID
	 */
	public void setBuddyId(String buddyId) {
		this.buddyId = buddyId;
	}

	/**
	 * BUDDY_ID을 가져옵니다..
	 * 
	 * @return BUDDY_ID
	 */
	public String getBuddyId() {
		return this.buddyId;
	}

	/**
	 * BUDDY_NAME을 설정합니다..
	 * 
	 * @param buddyName
	 *            BUDDY_NAME
	 */
	public void setBuddyName(String buddyName) {
		this.buddyName = buddyName;
	}

	/**
	 * BUDDY_NAME을 가져옵니다..
	 * 
	 * @return BUDDY_NAME
	 */
	public String getBuddyName() {
		return this.buddyName;
	}

	/**
	 * PASSWORD을 설정합니다..
	 * 
	 * @param password
	 *            PASSWORD
	 */
	public void setPassword(String password) {
		this.password = password;
	}

	/**
	 * PASSWORD을 가져옵니다..
	 * 
	 * @return PASSWORD
	 */
	public String getPassword() {
		return this.password;
	}

	/**
	 * BOARD 목록을 설정합니다..
	 * 
	 * @param boardList
	 *            BOARD 목록
	 */
	public void setBoardList(List<Board> boardList) {
		this.boardList = boardList;
	}

	/**
	 * BOARD를 추가합니다..
	 * 
	 * @param board
	 *            BOARD
	 */
	public void addBoard(Board board) {
		if (!boardList.contains(board)) {
			this.boardList.add(board);
		}
	}

	/**
	 * BOARD 목록을 가져옵니다..
	 * 
	 * @return BOARD 목록
	 */
	public List<Board> getBoardList() {
		return this.boardList;
	}

	/**
	 * REPLY 목록을 설정합니다..
	 * 
	 * @param replyList
	 *            REPLY 목록
	 */
	public void setReplyList(List<Reply> replyList) {
		this.replyList = replyList;
	}

	/**
	 * REPLY를 추가합니다..
	 * 
	 * @param reply
	 *            REPLY
	 */
	public void addReply(Reply reply) {
		this.replyList.add(reply);
	}

	/**
	 * REPLY 목록을 가져옵니다..
	 * 
	 * @return REPLY 목록
	 */
	public List<Reply> getReplyList() {
		return this.replyList;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((buddyId == null) ? 0 : buddyId.hashCode());
		return result;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		Buddy other = (Buddy) obj;
		if (buddyId == null) {
			if (other.buddyId != null) {
				return false;
			}
		} else if (!buddyId.equals(other.buddyId)) {
			return false;
		}
		return true;
	}

	@Override
	public String toString() {
		return "Buddy [buddyId=" + buddyId + ", buddyName=" + buddyName + ", password=" + password + ", boardList="
				+ boardList.size() + ", replyList=" + replyList.size() + "]";
	}

}
